name: Auto_Build_ErfanGSIs

on:
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
 watch:
   types: [started]
   
env:
  ROM_URL: https://bigota.d.miui.com/V11.0.3.0.QEECNXM/miui_MIMIX3_V11.0.3.0.QEECNXM_4d73488207_10.0.zip
  ROM_NAME: MIUI
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Check Out
      uses: actions/checkout@v2

#    - name: Fix Apt Problem & Clean Up
#      run: |
#        docker rmi `docker images -q`
#        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
#        sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* docker*
#        sudo -E apt-get update
#        sudo -E apt-get -y autoremove --purge
#        sudo -E apt-get clean 

#    - name: Initialization Environment
#      run: |
#        sudo -E apt-get -qq update
#        sudo -E apt-get -y upgrade
#        sudo -E apt-get -qq install git openjdk-8-jdk wget gzip bzip2 tar rar unzip

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get install git openjdk-8-jdk wget gzip bzip2 tar rar unzip -y
        sudo -E apt-get autoremove --purge -y
        sudo -E apt-get clean
        
    - name: Clone ErfanGSI Source Code
      run: |
        git clone --recurse-submodules https://github.com/erfanoabdi/ErfanGSIs.git
        
    - name: Setting Up ErfanGSI Requirements
      run: |
        sudo chmod -R 777 ErfanGSIs
        cd ErfanGSIs
        sudo bash setup.sh
        
    - name: Download Stock Rom & Generate GSI
      run: |
        sudo ./ErfanGSIs/url2GSI.sh $ROM_URL $ROM_NAME
        
    - name: Zip GSI Images
      run: |
        mkdir final
        tar -Jcvf final/$ROM_NAME-Aonly.xz /home/runner/work/Auto_Build_ErfanGSIs/Auto_Build_ErfanGSIs/ErfanGSIs/output/$ROM_NAME-Aonly*
        tar -Jcvf final/$ROM_NAME-AB.xz /home/runner/work/Auto_Build_ErfanGSIs/Auto_Build_ErfanGSIs/ErfanGSIs/output/$ROM_NAME-AB*
        
    - name: Upload Aonly GSI Images
      uses: actions/upload-artifact@v2
      with:
        name: Aonly-Image
        path: final/*Aonly.xz
        if-no-files-found: error

    - name: Upload AB GSI Images
      uses: actions/upload-artifact@v2
      with:
        name: AB-Image
        path: final/*AB.xz
        if-no-files-found: error

#    下面两项为开启Actions的SSH，仅作为调试使用，如需使用则删除前面的 '#' 即可
#    - name: SSH Connection To Actions
#      uses: P3TERX/debugger-action@master
#    当有任务失败时打开SSH，建议搭配上面使用，使用方法同上
#      if: failure()
